

<div ng-app="MyMovieApp" ng-controller="MovieAngularController">
    <h2>My Movie List</h2>

  

    <a href="/Movies/Create">Add New Movie</a>
    <br />
     
              
                
                    <select class="movieGenreDrop">
                        <option value="">- Select Genre -</option>
                        <option class="movieGenre" ng-repeat="x in GenreList" ng-click="FilterMovies(x)" value="<a href='/Movies/FilterMovies/{{ x }}'">{{ x }}</option>
                    </select>
                    <select class="movieRatingDrop">
                        <option value="">- Select Rating -</option>
                        <option class="movieRating" ng-repeat="x in RatingsList" ng-click="FilterMovies(x)" value="<a href='/Movies/FilterMovies/{{ x }}'">{{ x }}</option>
                    </select>
                    <span>Title: <input id="TitleInput" ng-model="Movies" /></span> <br /> 
                    <div class="btn btn-primary" ng-click="FilterMovies()">Filter</div>
               
   


    <table class="table">
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Release Date
                </th>
                <th>
                    Genre
                </th>
                <th>
                    Rating
                </th>
                <th>
                    Price
                </th>

            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="movie in myMovies">
                <td>
                    {{ movie.MovieName }}
                </td>
                <td>
                    {{ movie.StringReleaseDate }}
                </td>
                <td>
                    {{ movie.Genre }}
                </td>
                <td>
                    {{ movie.Rating }}
                </td>
                <td>
                    {{ movie.Price | currency }}
                </td>
                <td>
                   <a href="/Movies/Edit/{{ movie.Id }}">edit</a> |              @*method/parameters*@
                    <a href="/Movies/Details/{{ movie.Id }}">details</a> |
                    <a href="/Movies/Delete/{{ movie.Id }}">delete</a> 
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js"></script>
<script>
    var app = angular.module("MyMovieApp", []);

    app.filter('unique', function () {
        return function (collection, keyname) {
            var output = [];
            keys = [];

            angular.forEach(collection, function (item) {
                var key = item[keyname];
                
                if (keys.indexOf(key) === -1) {
                    keys.push(key);
                    

                    output.push(item);
                }
            });

            return output;

        }
    });

    //app.filter("date", function () {
    //    var dateStrings = [];
    //    for (i = 0; i <= myMovies.length; i++) {
    //        var milli = movie.ReleaseDate.replace(/\/Date\((-?\d+)\)\//, '$1');
    //        var d = new Date(parseInt(milli));
    //        dateStrings.push(d);
    //    }
    //    return dateStrings;
    //});


    app.factory('movieangularfactory', function ($http) {
        return {
            getMovies: function (callback) {
                $http({ method: "GET", url: "/Movies/GetMovies" }).then(function (data) {
                    callback(data.data);
                });
            },
            FilterMovies: function (Filter, callback) {
                $http({ method: "POST", url: "/Movies/FilterMovies", data: Filter }).then(function (data) {
                    callback(data.data);
                });
            },
            GetGenres: function (callback) {
                $http({ method: "GET", url: "/Movies/GetGenreList" }).then(function (data) {
                    callback(data);
                });
            },
            GetRatings: function (callback) {
                $http({ method: "GET", url: "/Movies/GetRatingList" }).then(function (data) {
                    callback(data);
                });
            }
        }
    });


    app.controller("MovieAngularController", function ($scope, $http, movieangularfactory) {
        $scope.myMovies = [];
        $scope.GenreList = [];
        $scope.RatingsList = [];
        $scope.Filter = {};

        $scope.getMovies = function (callback) {
            movieangularfactory.getMovies(callback);
               
        };

        $scope.GetGenres = function (callback) {
            movieangularfactory.GetGenres(callback);

        };

        $scope.GetRatings = function (callback) {
            movieangularfactory.GetRatings(callback);
        }

        $scope.setMovies = function (response) {
            $scope.myMovies = response;
        }
        $scope.FilterMovies = function () {
            $scope.Filter.Genre = $('.movieGenreDrop').find(':selected').text();
            $scope.Filter.Rating = $('.movieRatingDrop').find(':selected').text();
            $scope.Filter.Title = $('#TitleInput').val();
            movieangularfactory.FilterMovies($scope.Filter, $scope.setMovies);
        }
        $scope.setGenres = function (response) {
            $scope.GenreList = response.data;
        }
        $scope.setRatings = function (response) {
            $scope.RatingsList = response.data;
        }
       
        $scope.getMovies($scope.setMovies);
        $scope.GetGenres($scope.setGenres);
        $scope.GetRatings($scope.setRatings);

    });

   //angular.module('SearchFilter', function())
   //     .controller('SearchController', ['$scope', function ($scope) {
   //     if (searchinput != null && genrelist == null) {
   //         for (i = 0; i <= $scope.mymovies.length - 1; i++) {
   //             if (searchinput != movie.moviename) {
   //             $scope.mymovie.splice(movie);

   //         }
   //     }
   // }
   //     else if (searchinput == null && genrelist != null) {
   //         for (i = 0; i <= $scope.mymovies.length - 1; i++) {
   //             if (genrelist != movie.genre) {
   //                 $scope.mymovie.splice(movie);
   //             }
   //         }
   //     }
   //     else if (searchinput != null && genrelist != null) {
   //         for (i = 0; i <= $scope.mymovies.length - 1; i++) {
   //             if (searchinput != movie.moviename && genrelist != movie.genre) {
   //                 $scope.mymovie.splice(movie);
   //             }
   //         }
   //     }
   //       else {
   //          $scope.getMovies();
   //         }
   //     }
    //}
    //    }
</script>